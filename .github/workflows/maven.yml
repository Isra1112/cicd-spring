name: Java CICD Pipiline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
env:
  REGISTRY: "registry.digitalocean.com/cicd-spring-boot"
  IMAGE_NAME: "demo"
jobs:
  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Tests
        run: mvn -B test
#  sonar:
#    needs: tests
#    name: SonarCloud analysis
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: '17'
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Maven packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Analyze with SonarCloud
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Isra1112_cicd-spring -X
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB2_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#  build:
#    needs: tests
#    name: Build
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: '17'
#      - name: Cache Maven packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Build with Maven
#        run: mvn -B package -DskipTests --file pom.xml
#      - name: Verify Build Output
#        run: ls -R target
#      - name: Upload JAR
#        uses: actions/upload-artifact@v3
#        with:
#          name: application-jar
#          path: target/CICD-0.0.1-SNAPSHOT.jar


  build_and_push:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Maven Package
        run: mvn clean package

      - name: Build docker image
        run: docker build . -t $(echo $REGISTRY):$(echo $GITHUB_SHA | head -c7)

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_PAT }}

#      - name: Log in to DigitalOcean Container Registry with short-lived credentials
#        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY):$(echo $GITHUB_SHA | head -c7)